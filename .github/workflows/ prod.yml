name: Production Branch

on:
  push:
    branches:
      - production

jobs:
  prepare:
    name: 'Prepare matrix'
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        run: |
          # Get all folders that have a package.json with test script
          folders=$(find packages -name package.json -exec grep -l '"test"' {} \; | xargs dirname | xargs -n1 basename | jq -R -s -c 'split("\n")[:-1]')

          # Combine with your existing folders
          all_folders=$(echo '["smart-contracts", "backend", "claimer"]' | jq --argjson packages "$folders" '. + $packages | unique')

          echo "matrix=$all_folders" >> $GITHUB_OUTPUT
  run-tests:
    name: 'Run the tests'
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        folders: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: yarn
        shell: bash

      - run: 'yarn build'
        shell: bash

      - name: 'run lint'
        run: yarn workspace @relay-vaults/${{matrix.folders}} lint
        shell: bash

      - name: 'run tests'
        run: yarn workspace @relay-vaults/${{matrix.folders}} run test
        shell: bash

  build-docker-image:
    name: 'Build/push Docker image'
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: github.repository == 'relayprotocol/relay-vaults'
    permissions:
      contents: read
      packages: write
    needs:
      - run-tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/relayprotocol/relay-vaults:latest
            ghcr.io/relayprotocol/relay-vaults:${{ github.sha }}
            ghcr.io/relayprotocol/relay-vaults:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            TAG=${{ github.ref_name }}

  deploy-prod:
    name: Deploy to production
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: github.repository == 'relayprotocol/relay-vaults' && github.ref == 'refs/heads/production'
    needs: [build-docker-image]
    environment: prod
    container:
      image: ghcr.io/unevenlabs/infrastructure/deployer:1.0.3
      credentials:
        username: ${{ secrets.DEVOPSBOT_LOGIN }}
        password: ${{ secrets.DEVOPSBOT_TOKEN }}
    steps:
      - name: Deploy to production
        run: |
          bash -c "/app/deploy.sh"
        shell: bash
        env:
          ENVIRONMENT: 'prod'
          SERVICE: 'relay-vaults'
          GITHUB_SHA: '${{ github.sha }}'
          GITHUB_TOKEN: '${{ secrets.DEVOPSBOT_TOKEN }}'
          DEVOPSBOT_GPG_PRIVATE_KEY: ${{ secrets.DEVOPSBOT_GPG_PRIVATE_KEY }}
