name: Production Branch

on:
  push:
    branches:
      - production

jobs:
  build-docker-image:
    name: 'Build/push Docker image'
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: github.repository == 'relayprotocol/relay-vaults'
    outputs:
      latest-release: ${{ steps.get-latest-release.outputs.tag }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest release
        id: get-latest-release
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Docker image to use as base name for tags
          images: |
            ghcr.io/relayprotocol/relay-vaults
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.ref_name }}-${{ github.sha }}
            type=raw,value=${{ steps.get-latest-release.outputs.tag }}
            type=raw,value=${{ github.sha }}
            type=sha

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TAG=${{ github.ref_name }}

  deploy-prod:
    name: Deploy to production
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: github.repository == 'relayprotocol/relay-vaults' && github.ref == 'refs/heads/production'
    needs: [build-docker-image]
    environment: prod
    container:
      image: ghcr.io/unevenlabs/infrastructure/deployer:1.0.3
      credentials:
        username: ${{ secrets.DEVOPSBOT_LOGIN }}
        password: ${{ secrets.DEVOPSBOT_TOKEN }}
    steps:
      - name: Deploy to production
        run: |
          bash -c "/app/deploy.sh"
        shell: bash
        env:
          ENVIRONMENT: 'prod'
          SERVICE: 'relay-vaults'
          GITHUB_SHA: '${{ needs.build-docker-image.outputs.latest-release }}'
          GITHUB_TOKEN: '${{ secrets.DEVOPSBOT_TOKEN }}'
          DEVOPSBOT_GPG_PRIVATE_KEY: ${{ secrets.DEVOPSBOT_GPG_PRIVATE_KEY }}
