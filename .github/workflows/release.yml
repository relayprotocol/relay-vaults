name: Release to Production

on:
  release:
    types: [published]

jobs:
  merge-to-production:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Configure Git to use Bot user
        run: |
          git config user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/relayprotocol/relay-vaults.git

      - name: Merge main into production
        run: |
          git fetch origin production
          git checkout main
          git reset --soft origin/production
          git checkout -b production
          git commit -a -m "Release ${{ github.event.release.tag_name }}"
          git push origin production
